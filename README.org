* Makefile-nvim
Telescope integration with makefiles and tox!
* Plugin Dependencies and Installation
- Telescope and its dependencies
	- so build your neovim from source, or get the latest release!
- Here is an example using [[https://github.com/junegunn/vim-plug][vim-plug]] here
  - but feel free to use whatever plugin manager that you like!
#+BEGIN_SRC vim
" This is a requirement, which implements some useful window management
"   items for neovim
Plug 'nvim-lua/popup.nvim'
Plug 'nvim-lua/plenary.nvim'

" fuzzy finder etc...
Plug 'nvim-telescope/telescope.nvim'    
" compiled fzy sorter (hence faster)
Plug 'nvim-telescope/telescope-fzy-native.nvim'

" for terminal integration
Plug 'ThePrimeagen/harpoon'

"Plugin for Makefile integration
Plug 'Josiah-tan/makefile-nvim'
#+END_SRC
* Setup
- This setup function is important for initializing the plugin, any default options can be set here
#+BEGIN_SRC lua
-- no defaults by default
require("makefile_nvim").setup()
-- using terminal 1 by default
require("makefile_nvim").setup({term = 1})
#+END_SRC
* Mappings
- below are some mappings that might be useful to use
	- note that if `selection` is a string, the make command combined with the `selection` is sent to the terminal without evoking telescope
#+BEGIN_SRC lua
vim.api.nvim_set_keymap("n", "<Leader>mf", ':lua require("makefile_nvim.make").run({term = 1})<CR>', {noremap = true, silent = true, expr = false})
vim.api.nvim_set_keymap("n", "<Leader>ma", ':lua require("makefile_nvim.make").run({term = 1, selection = "all"})<CR>', {noremap = true, silent = true, expr = false})
vim.api.nvim_set_keymap("n", "<Leader>mc", ':lua require("makefile_nvim.make").run({term = 1, selection = "clean"})<CR>', {noremap = true, silent = true, expr = false})

vim.api.nvim_set_keymap("n", "<Leader>txf", ':lua require("makefile_nvim.tox").run({term = 1})<CR>', {noremap = true, silent = true, expr = false})
vim.api.nvim_set_keymap("n", "<Leader>txt", ':lua require("makefile_nvim.tox").run({term = 1, selection = "test"})<CR>', {noremap = true, silent = true, expr = false})
#+END_SRC
